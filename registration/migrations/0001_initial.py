# Generated by Django 5.0.1 on 2024-02-05 23:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='Employee ID')),
                ('fname', models.CharField(max_length=20, verbose_name='First Name')),
                ('lname', models.CharField(max_length=20, verbose_name='Last Name')),
                ('mobile', models.CharField(max_length=15, verbose_name='Mobile')),
                ('dbirth', models.DateField()),
                ('email', models.EmailField(max_length=200)),
                ('ni', models.CharField(max_length=20, verbose_name='National Insurance Number')),
                ('tcode', models.CharField(max_length=20, verbose_name='Tax Code')),
                ('pension', models.CharField(choices=[('No', 'No'), ('Yes', 'Yes')], max_length=3, null=True)),
                ('student_loan', models.CharField(choices=[('P1', 'Plan 1'), ('P2', 'Plan 2'), ('P4', 'Plan 4'), ('P5', 'Plan 5'), ('PL', 'Postgraduate Loan'), ('P2&PL', 'Plan 2 and Postgraduate Loan'), ('No', 'No')], max_length=20, null=True, verbose_name='Student Loan')),
            ],
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('reference', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('duration', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('rate', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('mobile', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('photo', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='employee_photos/')),
                ('cv', models.FileField(blank=True, null=True, upload_to='candidate_files/')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_employee', models.BooleanField(default=False)),
                ('is_employer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContactFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='contact_files/')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='registration.contact')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=50, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Timesheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mon', models.FloatField(default=0)),
                ('tue', models.FloatField(default=0)),
                ('wed', models.FloatField(default=0)),
                ('thu', models.FloatField(default=0)),
                ('fri', models.FloatField(default=0)),
                ('sat', models.FloatField(default=0)),
                ('sun', models.FloatField(default=0)),
                ('npr', models.FloatField(verbose_name='Normal Pay Rate')),
                ('opr', models.FloatField(verbose_name='Overtime Pay Rate')),
                ('date', models.CharField(default='', max_length=255)),
                ('eid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='registration.employee', verbose_name='ID')),
            ],
        ),
    ]
